@model Web.Models.Login

@{
    ViewData["Title"] = "Login";
    Layout = "_AccountLayout";

}
<div class="account-container">
    <div class="login-form">
        <div class="text-center">
            <h2><span class="logo-p1">Market</span><span class="logo-p2">Pulse</span></h2>
        </div>
        <form id="loginform" class="col-md-5">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input type="password" asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group d-grid my">
                <input type="submit" value="Login" class="btn btn-primary" />
            </div>
            <div class="text-center">
                <p>Don't have an account? <a href="@Url.Action("Register", "Account")">Register</a></p>
            </div>
        </form>
    </div>
    <div class="background-content">
        <h2>Welcome Back!</h2>
        <p>Enter your personal details and start your journey with us.</p>
    </div>
</div>
@section scripts {
    <script>
        $(document).ready(() => {
            const validation = new JustValidate('#loginform');

            validation
                .addField('#Email', [
                    {
                        rule: 'required',
                        errorMessage: 'Email is required',
                    }
                ])
                .addField('#Password', [
                    {
                        rule: 'required',
                        errorMessage: 'Password is required',
                    }
                ])
                .onSuccess((event) => {
                    event.preventDefault();

                    $("#loginform").LoadingOverlay("show");

                    const loginData = {
                        email: $("#Email").val(),
                        password: $("#Password").val()
                    };

                    fetch('https://dev-mt-api.azurewebsites.net/api/Tokens', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(loginData)
                    }).then(response => {
                        $("#loginform").LoadingOverlay("hide");

                        if (response.status === 401) {
                            // Display the error message using alertify
                            alertify.error("User credentials are wrong");
                            throw new Error('Unauthorized');
                        }

                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                        .then(data => {
                            alertify.success("Login successful");
                            window.location.href = '@Url.Action("Dashboard", "Account")';
                        })
                        .catch(error => {
                            $("#loginform").LoadingOverlay("hide");
                            if (error.message !== 'Unauthorized') {
                                console.error('There was a problem with the fetch operation:', error);
                                alertify.error('An error occurred, please try again');
                            }
                        });
                });
        });
    </script>
}
